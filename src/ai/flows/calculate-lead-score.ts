// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview Calculates a relevance score for a given lead based on user-defined criteria.
 *
 * - calculateLeadScore - A function that calculates the lead score.
 * - CalculateLeadScoreInput - The input type for the calculateLeadScore function.
 * - CalculateLeadScoreOutput - The return type for the calculateLeadScore function.
 */

import {ai} from '@/ai/ai-instance';
import {z} from 'genkit';

const CalculateLeadScoreInputSchema = z.object({
  leadDetails: z.string().describe('Details about the lead, including company name, contact person, industry, location, and company size.'),
  criteria: z.string().describe('The user-defined criteria for lead generation, such as industry, location, and company size.'),
});
export type CalculateLeadScoreInput = z.infer<typeof CalculateLeadScoreInputSchema>;

const CalculateLeadScoreOutputSchema = z.object({
  relevanceScore: z.number().describe('A numerical score (0-100) representing the relevance of the lead to the specified criteria.'),
  reasoning: z.string().describe('Explanation of why the lead received the calculated score.'),
});
export type CalculateLeadScoreOutput = z.infer<typeof CalculateLeadScoreOutputSchema>;

export async function calculateLeadScore(input: CalculateLeadScoreInput): Promise<CalculateLeadScoreOutput> {
  return calculateLeadScoreFlow(input);
}

const prompt = ai.definePrompt({
  name: 'calculateLeadScorePrompt',
  input: {
    schema: z.object({
      leadDetails: z.string().describe('Details about the lead.'),
      criteria: z.string().describe('The user-defined criteria for lead generation.'),
    }),
  },
  output: {
    schema: z.object({
      relevanceScore: z.number().describe('The relevance score of the lead (0-100).'),
      reasoning: z.string().describe('Explanation of why the lead received the calculated score.'),
    }),
  },
  prompt: `You are an AI assistant that calculates a relevance score for a lead based on user-defined criteria.\n\nGiven the following lead details:\n{{{leadDetails}}}\n\nAnd the following user-defined criteria:\n{{{criteria}}}\n\nCalculate a relevance score between 0 and 100. Provide a short explanation of your reasoning for the assigned score. The score should reflect how well the lead matches the specified criteria.\n`,
});

const calculateLeadScoreFlow = ai.defineFlow<
  typeof CalculateLeadScoreInputSchema,
  typeof CalculateLeadScoreOutputSchema
>({
  name: 'calculateLeadScoreFlow',
  inputSchema: CalculateLeadScoreInputSchema,
  outputSchema: CalculateLeadScoreOutputSchema,
}, async input => {
  const {output} = await prompt(input);
  return output!;
});
