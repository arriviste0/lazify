
@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 240 10% 3.9%; /* Darker Space Grey */
    --foreground: 0 0% 98%; /* Off-white for text */

    --card: 240 10% 6.9%; /* Slightly lighter card background */
    --card-foreground: 0 0% 98%;

    --popover: 240 10% 3.9%;
    --popover-foreground: 0 0% 98%;

    --primary: 262.1 83.3% 57.8%; /* Default Purple */
    --primary-foreground: 0 0% 98%;

    --secondary: 240 3.7% 15.9%; /* Dark grey */
    --secondary-foreground: 0 0% 98%;

    --muted: 240 3.7% 25.9%; /* Lighter Muted for less contrast */
    --muted-foreground: 0 0% 70.9%; /* Lighter Muted Foreground */

    --accent: 300 76% 52%; /* Vivid Pink/Magenta as accent */
    --accent-foreground: 0 0% 98%;

    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 98%;

    --border: 240 3.7% 20.9%; /* Slightly more visible border */
    --input: 240 3.7% 15.9%;
    --ring: 262.1 83.3% 57.8%; /* Ring color matching primary */

    --radius: 0.75rem;

    /* Chart colors (can be adjusted or removed if not used by ShadCN charts) */
    --chart-1: hsl(var(--primary));
    --chart-2: hsl(var(--accent));
    --chart-3: 210 40% 96.1%;
    --chart-4: 10 60% 50%;
    --chart-5: 180 50% 50%;

    /* Theme colors for agent cards - you might need to add more */
    --theme-blue: linear-gradient(135deg, #667eea, #764ba2);
    --theme-amber: linear-gradient(135deg, #f093fb, #f5576c);
    --theme-rose: linear-gradient(135deg, #4facfe, #00f2fe);
    --theme-purple: linear-gradient(135deg, #6a11cb, #2575fc);
    --theme-green: linear-gradient(135deg, #43e97b, #38f9d7);
    --theme-teal: linear-gradient(135deg, #16a085, #f4d03f);
    --theme-pink: linear-gradient(135deg, #fa709a, #fee140);

    --carousel-section-bg: 240 8% 6%; /* Darker background for carousel section */
  }

  /* .dark class is effectively the default due to <html class="dark"> */
  .dark {
    /* All variables are already defined in :root for dark theme */
  }
}

@layer base {
  * {
    @apply border-border;
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }
  body {
    @apply bg-background text-foreground;
    font-family: 'SF Pro Display', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; /* From example */
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    overflow-x: hidden; /* From example */
  }

  h1, h2, h3, h4, h5, h6 {
    @apply font-bold tracking-tight;
  }
  
  /* Custom Scrollbar from example */
  ::-webkit-scrollbar {
      width: 8px;
  }
  ::-webkit-scrollbar-track {
      background: #1a1a1a; /* Dark track */
  }
  ::-webkit-scrollbar-thumb {
      background: linear-gradient(135deg, hsl(var(--primary)), hsl(var(--accent)));
      border-radius: 4px;
  }
  ::-webkit-scrollbar-thumb:hover {
      background: linear-gradient(135deg, hsl(var(--accent)), hsl(var(--primary)));
  }
}

@layer utilities {
  .modern-card {
    @apply bg-card/80 backdrop-blur-lg border border-card-foreground/10 rounded-xl shadow-xl hover:shadow-2xl transition-all duration-300;
  }
  .cta-button {
    @apply bg-gradient-to-r from-primary via-purple-500 to-pink-500 text-primary-foreground font-semibold shadow-lg hover:shadow-primary/40 transition-all duration-300 transform hover:scale-105;
  }
   .outline-button-glow {
    @apply border-primary/50 text-primary hover:bg-primary/10 hover:shadow-[0_0_15px_5px_theme(colors.primary/0.2)] transition-all duration-300;
  }
  .gradient-text-animated {
    @apply bg-gradient-to-r from-primary via-purple-500 to-pink-500 bg-clip-text text-transparent animate-gradient-flow;
    background-size: 200% 200%; 
  }
  .animated-background-subtle {
    @apply bg-gradient-to-br from-background via-purple-950/10 to-background;
    background-size: 200% 200%;
    animation: gradient-subtle 20s ease infinite;
  }
  .section-padding {
    @apply py-16 md:py-24 lg:py-28;
  }
  .no-scrollbar::-webkit-scrollbar {
    display: none;
  }
  .no-scrollbar {
    -ms-overflow-style: none; 
    scrollbar-width: none; 
  }
}

.scroll-progress-bar {
   @apply fixed top-0 left-0 right-0 h-1 bg-gradient-to-r from-primary to-accent origin-left z-50;
}

/* Styles for Scroll-Transform Card Stack Animation (Services Section) */
.services-cards-section {
    view-timeline-name: --cards-element-scrolls-in-body;
    view-timeline-axis: block;
    min-height: 200vh; /* Ensure enough scrollable height for 4 cards */
    --numcards: 4; /* Default, overridden by inline style */
}

.cards-sticky-container {
    position: relative;
    /* Adjusted to give more space for the last card to scroll up */
    padding-bottom: 100vh; 
}

.service-card-wrapper { 
    position: relative; /* No longer sticky itself */
    width: 100%; 
    max-width: 768px; 
    margin-left: auto;
    margin-right: auto;
    /* CSS variables set via inline style in the component for dynamic values */
    /* --card-actual-index: set by JS; */
    /* --numcards-from-prop: set by JS; */

    --index0: var(--card-actual-index); 
    --numcards: var(--numcards-from-prop, 4); /* Fallback to 4 if prop not set */
    --index: calc(var(--index0) + 1); 
    --reverse-index: calc(var(--numcards) - var(--index0));
    --reverse-index0: calc(var(--reverse-index) - 1);
}

.service-card-wrapper .card__content { /* This is the shadcn Card component */
    position: sticky;
    top: 6rem; /* Adjust based on nav height + desired gap from top */
    min-height: 40vh; /* Card sticky duration */
    margin-bottom: -30vh; /* Overlap: (min-height - (visible part like 10vh) ) */
    
    --start-range: calc(var(--index0) / var(--numcards) * 100%);
    --end-range: calc(var(--index) / var(--numcards) * 100%);
    
    animation: linear scale-service-card forwards;
    animation-timeline: --cards-element-scrolls-in-body;
    animation-range: exit-crossing var(--start-range) exit-crossing var(--end-range);
    
    transform-origin: center center; 
    will-change: transform; 
    transition: transform 0.2s ease-out; 
}

.service-card-wrapper:last-child .card__content {
    margin-bottom: 0; 
}

@keyframes scale-service-card {
    to {
        transform: scale(calc(1.1 - (0.1 * var(--reverse-index))));
    }
}

@supports not (animation-timeline: --cards-element-scrolls-in-body) {
  .service-card-wrapper {
    position: relative; 
    top: auto;
    margin-bottom: 2rem; 
    min-height: auto;
  }
  .service-card-wrapper .card__content {
    animation: none; 
    position: static; /* Fallback, no stickiness */
    min-height: auto;
    margin-bottom: 0;
  }
}

/* New Scroll-Driven 3D Carousel Styles */
.agent-scroll-carousel-section {
    min-height: 350vh; /* Adjust based on number of agents and desired scroll length */
    position: relative;
    background: var(--carousel-section-bg); /* From theme */
     /* background: linear-gradient(180deg, #0a0a0a 0%, #1a1a2e 50%, #0a0a0a 100%); From example */
}

.agent-scroll-carousel-container {
    position: sticky;
    top: 0;
    height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden; /* Crucial for containing transformed slides */
    perspective: 1200px; /* For 3D transformations */
}

.agent-carousel-track {
    display: flex; /* Will contain slides absolutely positioned for transform effect */
    width: 100%; /* Track itself doesn't scroll, items transform within it */
    height: 100%; /* Takes height of container */
    position: relative;
    transform-style: preserve-3d;
    align-items: center; /* Vertically center slides in the track */
    justify-content: center; /* Horizontally center the "active" slide area */
}

.agent-carousel-slide {
    position: absolute; /* Slides are absolutely positioned within the track for 3D effect */
    width: 90%; /* Max width of a card */
    max-width: 400px; /* As per example */
    height: 600px; /* As per example */
    /* Centering is handled by Framer Motion transforms (translateX based on distance) */
    will-change: transform, opacity;
    transform-origin: center center; /* Ensure transforms are centered */
    display: flex; /* To center ModernAgentCard if it's smaller */
    align-items: center;
    justify-content: center;
}

/* Styling for ModernAgentCard to match .slide-content from example */
.slide-content-wrapper { /* Outer wrapper for potential animations */
    width: 100%;
    height: 100%;
}
.slide-content {
    width: 100%; /* Takes full width of .agent-carousel-slide */
    height: 100%; /* Takes full height of .agent-carousel-slide */
    background: rgba(255, 255, 255, 0.03); /* Subtle glassmorphism */
    backdrop-filter: blur(15px);
    -webkit-backdrop-filter: blur(15px); /* Safari */
    border-radius: 24px;
    border: 1px solid rgba(255, 255, 255, 0.08);
    padding: 2rem 1.5rem; /* Adjusted padding */
    display: flex;
    flex-direction: column;
    justify-content: center; /* Content centered vertically */
    align-items: center;
    text-align: center;
    position: relative;
    overflow: hidden;
    transition: all 0.6s cubic-bezier(0.4, 0, 0.2, 1);
    box-shadow: 0 10px 30px rgba(0,0,0,0.2);
}

.slide-content::before { /* Subtle hover gradient sheen */
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(135deg, rgba(255,255,255,0.07) 0%, transparent 50%, rgba(255,255,255,0.03) 100%);
    opacity: 0;
    transition: opacity 0.6s ease;
    z-index: 0;
}

.slide-content:hover::before {
    opacity: 1;
}

.slide-content > * { /* Ensure content is above the ::before pseudo-element */
    position: relative;
    z-index: 1;
}

.slide-icon {
    width: 70px; /* Slightly smaller */
    height: 70px;
    margin-bottom: 1.5rem;
    border-radius: 20px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 2.5rem; /* Emoji size */
    box-shadow: 0 15px 30px rgba(var(--primary-rgb), 0.2); /* Use primary color for shadow */
    transition: all 0.6s cubic-bezier(0.4, 0, 0.2, 1);
    /* Actual background set by inline style in ModernAgentCard.tsx using CSS vars */
}

.slide-title {
    font-size: 2rem; /* Adjusted */
    font-weight: 700; /* Bold */
    margin-bottom: 1rem;
    line-height: 1.2;
    color: hsl(var(--foreground));
    transition: all 0.6s cubic-bezier(0.4, 0, 0.2, 1);
}

.slide-description {
    font-size: 1rem; /* Adjusted */
    line-height: 1.6;
    opacity: 0.8;
    margin-bottom: 1.5rem;
    color: hsl(var(--muted-foreground));
    max-width: 90%; /* Prevent text from touching edges */
    transition: all 0.6s cubic-bezier(0.4, 0, 0.2, 1);
}

.slide-cta { /* Leverages existing .cta-button utility but can be customized */
    @apply cta-button; /* Use existing CTA style */
    padding: 0.8rem 1.8rem; /* Adjusted padding */
    border-radius: 50px;
    font-size: 0.9rem;
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
}

.slide-cta:hover {
    transform: translateY(-2px) scale(1.03); /* Keep existing hover from cta-button */
}

/* Add specific theme hover for CTA if needed */
.slide-cta.hover-theme-blue:hover { background: var(--theme-blue); filter: brightness(1.1); }
.slide-cta.hover-theme-amber:hover { background: var(--theme-amber); filter: brightness(1.1); }
/* ... add for other colors as defined in :root */


/* Keyframes from example (can be used for card content entry) */
@keyframes slideInUp {
    from {
        opacity: 0;
        transform: translateY(30px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}
/* Add if you want a general animate-in class for Framer Motion */
.animate-in-slide {
    animation: slideInUp 0.8s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

/* Responsive adjustments for the new carousel */
@media (max-width: 768px) {
    .agent-carousel-slide {
        height: 500px; /* Smaller height on mobile */
        max-width: 90vw; /* Takes more screen width */
    }
    .slide-content {
        padding: 1.5rem 1rem;
    }
    .slide-title {
        font-size: 1.75rem;
    }
    .slide-icon {
        width: 60px;
        height: 60px;
        font-size: 2rem;
    }
}

/* Add this if you have a specific progress line like in the example, but this might be handled by ScrollProgressBar */
.progress-line-custom {
    position: fixed;
    top: 0; /* Or use your existing scroll-progress-bar */
    left: 0;
    width: 100%;
    height: 4px;
    background: rgba(255, 255, 255, 0.05);
    z-index: 100; /* Ensure it's above content, but below header */
}

.progress-fill-custom {
    height: 100%;
    background: linear-gradient(90deg, hsl(var(--primary)), hsl(var(--accent)));
    width: 0%; /* This would be animated by JS/Framer Motion */
    transition: width 0.1s ease-out; /* Smooth out width changes */
}

/* Ensure smooth scroll behavior is globally applied if not already */
html {
    scroll-behavior: smooth;
}

/* Adjusting root variables for primary color to have an RGB version for shadows */
:root {
    /* ... other variables ... */
    --primary-rgb: 106, 27, 154; /* Example for purple; adjust if your primary changes */
    --accent-rgb: 213, 0, 249; /* Example for pink/magenta */
}
/* Update if primary changes to ensure --primary-rgb is correct */
/* If primary is 262.1 83.3% 57.8% -> HSL(262, 83%, 58%) approx -> RGB(106, 27, 154) */
/* You'd need to manually update --primary-rgb if --primary changes significantly */

